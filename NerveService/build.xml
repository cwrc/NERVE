<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="NerveService" default="default" basedir=".">
    <description>Builds, tests, and runs the project NerveService.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <!-- Copy source files to WEB-INF directory -->
    <target name ="-post-compile" depends="copy-src"/>
    <target name="copy-src">
        <copy todir="${build.dir}/web/WEB-INF/src">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>   
    
    
    <!--<property file="build.properties"/>-->
    
<!--    <target name="key_file_check">  
        <available property="key_file.exists" file="${keyfile}"/>          
    </target>
    
    <target name="deploy" depends="key_file_check" if="${key_file.exists}">
        <loadfile property="key" srcFile="${keyfile}"/> 
        <echo>${key}</echo>         
        
        <scp todir="${remoteTarget}" keyfile="${keyfile}" trust="yes">
            <fileset dir="dist" includes="NerveService.war"/>
        </scp>
    </target>-->
    
    <!-- Deploy .war file to dh server -->
    <property name="keyfile" value="D:/cygwin/home/edward/.ssh/id_rsa"/>
    <property name="remoteTarget" value="debian@dh.sharcnet.ca:/home/debian/tomcat9/webapps"/>
    <property name="war.dir" value="dist"/>
    <property name="war.name" value="NerveService.war"/>
    
    <target name="deploy">
        <echo>copy ${war.dir}/${war.name} to ${remoteTarget}</echo>
        <scp todir="${remoteTarget}" keyfile="${keyfile}" trust="yes">
            <fileset dir="${war.dir}">
                <include name="${war.name}"/>
            </fileset>
        </scp>        
    </target>
    
</project>
